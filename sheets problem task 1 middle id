//problem 2
#include<iostream>
#include <vector>
#include <string>
#include<algorithm>
using namespace std;
void menu(){
cout<<"1)add a new player:"<<endl;
cout<<"2)dispay top 10 names and scores:"<<endl;
cout<<"3)enter a player name and view it's score:"<<endl;
cout<<"4)enter 0 to exit:"<<endl;
}
int main() {
    vector<pair<int, string> > vec;
    string names_arr[] = {"ahmed", "omar", "ali", "khaled", "john", "bill", "tom", "mark", "habiba", "ayla"};
    int scores_arr[] = {70, 95, 90, 20, 81, 72, 70, 60, 55, 50};
    int n = sizeof(scores_arr) / sizeof(scores_arr[0]);
    for (int i = 0; i < n; i++) {
        vec.emplace_back(make_pair(scores_arr[i], names_arr[i]));
    }
    menu();
    while (true) {
        int choice;
        cin >> choice;
        if (choice == 1) {
            string name;
            int score;
            cout << "enter the player name and it's score:";
            cin >> name;
            cin >> score;
            vec.emplace_back(make_pair(score, name));
            sort(vec.rbegin(), vec.rend());
            vec.erase(vec.end() - 1);
        }
        if (choice == 2) {
            sort(vec.rbegin(), vec.rend());
            for (int i = 0; i < vec.size(); i++) {
                cout << vec[i].second << ":" << vec[i].first << endl;
            }
        } else if (choice == 3) {
            string name;
            bool flag=0;
            cout << "enter the player name:";
            cin >> name;
            for (int i = 0; i < vec.size(); i++) {
                if (vec[i].second == name) {
                    cout << vec[i].first<<endl;
                    flag=1;

                }
            }
            if(flag==0)
                cout << "the player name not in the top 10. ";
        }
        else if(choice==0){
            break;
        }
    }
}





//=========================
//problem 5
#include <iostream>

using namespace std;

void changeText(string str)
{
    string text;
    string x = " or she";
    string y = " or her";
    
    for (char i : str)
    {
        //the string will save the input string and the string we want to add to make it inclusive at each punctuation letter or space
        if (i == ' ') 
        {
            if (text == "He" || text == "he")
            {
                text += x; 
            }

            else if (text == "him" || text == "his")
            {
                text += y;
            }

            cout << text << ' ' ;
            text.erase();
        }

        else if (i == '.')
        {
            if (text == "He" || text == "he")
            {
                text += x;
            }

            else if (text == "him" || text == "his")
            {
                text += y;
            }

            cout << text << '.' ;
            text.erase();
        }

        else if (i == '?')
        {
            if (text == "He" || text == "he")
            {
                text += x;
            }

            else if (text == "him" || text == "his")
            {
                text += y;
            }

            cout << text << '?' ;
            text.erase();
        }

        else if (i == '!')
        {
            if (text == "He" || text == "he")
            {
                text += x;
            }

            else if (text == "him" || text == "his")
            {
                text += y;
            }

            cout << text << '!' ;
            text.erase();
        }

        else if (i == ',')
        {
            if (text == "He" || text == "he")
            {
                text += x;
            }

            else if (text == "him" || text == "his")
            {
                text += y;
            }

            cout << text << ',' ;
            text.erase();
        }

        else if (i == ';')
        {
            if (text == "He" || text == "he")
            {
                text += x;
            }

            else if (text == "him" || text == "his")
            {
                text += y;
            }

            cout << text << ';' ;
            text.erase();
        }

        else
        {
            text += i;
        }
    }
    cout << text ;
}

int main()
{
    string str;

    cout << "Welcome, Please enter your text" << endl;
    getline(cin,str);
    changeText(str);
}










//==========================================================
// problem 8
#include <iostream>
#include <string>

void printLine(int n, int i) {
    for (int j = 0; j < i; j++) {
        std::cout << "  ";  // Print spaces before the stars
    }
    
    for (int j = 0; j < n; j++) {
        std::cout << "* ";  // Print the stars
    }
    
    std::cout << std::endl;
}

void pattern(int n, int i) {
    if (n == 1) {
        printLine(n, i);  // Base case: print a single line with one star
    } else {
        pattern(n / 2, i);  // Recursive call for the upper half
        
        printLine(n, i);  // Print the middle line
        
        pattern(n / 2, i + n / 2);  // Recursive call for the lower half
    }
}

int main() {
    pattern(8, 0);  // Example call with n = 8 and i = 0
    return 0;
}
//==================================================
//problem 11

#include <iostream>
#include <fstream>
#include <vector>
#include <sstream>

using namespace std;


void compareChar(fstream& f1, fstream& f2)
{
    string str1,str2,line1,line2;
    int counter = 0;
    while (!f1.eof() && !f2.eof())
    {
        //read each line
        getline(f1,line1,'\n');
        getline(f2,line2,'\n');
        counter++;

        if (line1 != line2)
        {
            cout << "The two files are different in line number " << counter << endl;
            cout << "The first different line in file1 is " << line1 << endl;
            cout << "The first different line in file2 is " << line2 << endl;
            f1.close();
            f2.close();
            return;
        }

    }

    cout << "The two files are identical ^_^" << endl;

    f1.close();
    f2.close();
}

void compareWord(fstream& f1, fstream& f2)
{
    vector<string> v1,v2;
    string line1,line2,word1,word2;
    stringstream str1,str2;
    while (f1 >> word1 && f2 >> word2)
    {
        if (word1 != word2)
        {
            cout << "The first different word in file1 is " << word1 << endl;
            cout << "The first different word in file2 is " << word2 << endl;
            f1.close();
            f2.close();
            return;
        }
    }
    cout << "The two files are identical ^_^" << endl;

    f1.close();
    f2.close();
}
int main()
{
    fstream file1,file2;
    char fileName1[100], fileName2[100];
    int choice;

    // opening the two files
    cout << "Enter the name of the first file with extension '.txt' : ";
    cin >> fileName1;
    file1.open(fileName1,ios::in);

    cout << "Enter the name of the second file with extension '.txt' : ";
    cin >> fileName2;
    file2.open(fileName2,ios::in);


    if (!file1.fail() && !file2.fail())
    {
        cout << "Files are opened successfully" << endl;
    }
    else
    {
        cout << "The files could not be opened :(" << endl;
    }

    cout << "Hello, Choose an option from these options?\n1-Compare character by character\n2-Compare word by word" << endl;
    cin >> choice;

    if (choice == 1)
    {
        compareChar(file1,file2);
    }
    else if (choice == 2)
    {
        compareWord(file1,file2);
    }

}
